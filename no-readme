#!/bin/bash
# ----------------------------------------------------------------------------------------------------
# no-readme | simple script to null/enable readme.* and license.* files on a cPanel server
# no-readme Version: 3.0
# GitLab: https://git.intergen.us/intergen/No-ReadMe
# ---------------------------------------------------
# InterGenStudios: 01-23-2019
# Copyright (c) 2019: Christopher 'InterGen' Cork - InterGenStudios
# URL: https://intergenstudios.com
# --------------------------------
# License: GPL-2.0+
# URL: http://opensource.org/licenses/gpl-license.php
# ---------------------------------------------------
# no-readme is free software:
# You may redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software
# Foundation, either version 2 of the License, or (at your discretion)
# any later version.
# ------------------

###########################################
##---------------------------------------##
## BEGIN - INITIAL VARIABLE DECLARATIONS ##
##---------------------------------------##
###########################################

RE='^[0-9]+$'
RED="\e[1m\e[31m"
GREEN="\e[1m\e[32m"
YELLOW="\e[1m\e[33m"
BLUE="\e[1m\e[34m"
WHITE="\e[1m\e[37m"
NOCOLOR="\e[0m"

vers=2.0

USERLIST="$(grep \: /etc/trueuserdomains | grep -v nobody | awk '{print $2}' | uniq)"

#########################################
##-------------------------------------##
## END - INITIAL VARIABLE DECLARATIONS ##
##-------------------------------------##
#########################################

##############################
##--------------------------##
## BEGIN - SCRIPT FUNCTIONS ##
##--------------------------##
##############################

#----------------------------------#
# BEGIN - DISPLAY LAYOUT FUNCTIONS #
#----------------------------------#

SEPARATOR () {
  echo -e "\n\n${BLUE}------------------------------------------------------------------------------${NOCOLOR}\n\n"
}

SPACER () {
  echo -e "\n${BLUE}----------------------------------\n${NOCOLOR}"
}

HEADER () {
  echo -e "\n\n${BLUE}_________________________________________________________________________________________${NOCOLOR}\n"
  echo -e "${WHITE}    No-ReadMe v${GREEN}${vers}${NOCOLOR}"
  echo -e "${BLUE}_________________________________________________________________________________________${NOCOLOR}\n\n"
}

#--------------------------------#
# END - DISPLAY LAYOUT FUNCTIONS #
#--------------------------------#

CHECK_FOR_ROOT () {
  if [ "$(id -u)" != "0" ]; then
    echo -e "\n\n    ${RED}${BLINK}--------${NOCOLOR}"
    echo -e "    ${RED}WARNING!${NOCOLOR}"
    echo -e "    ${RED}--------${NOCOLOR}\n\n"
    echo -e "    ${WHITE}No-ReadMe must be run as ${RED}root${NOCOLOR}\n\n"
    echo -e "    (Exiting now...)\n\n"
    exit 1
  fi
}

BLOCK_SINGLE_USER () {
  clear
  HEADER
  echo -e "\n  Checking files for user ${YELLOW}${user}${NOCOLOR}...\n"
  if [[ $(find /home/"$user" -type f -iname "readme.*" | wc -l) > 0 ]]; then
    find /home/"$user" -type f -iname "readme.*" \( -exec chmod 000 {} \; -o -exec true \; \) -exec chown root:root {} \;
    echo -e "\n  All ${WHITE}README.*${NOCOLOR} files have been blocked for user ${YELLOW}${user}${NOCOLOR}"
  else
    echo -e "\n  No ${WHITE}README.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}, skipping..."
  fi
  if [[ $(find /home/"$user" -type f -iname "license.*" | wc -l) > 0 ]]; then
    find /home/"$user" -type f -iname "license.*" \( -exec chmod 000 {} \; -o -exec true \; \) -exec chown root:root {} \;
    echo -e "\n  All ${WHITE}LICENSE.*${NOCOLOR} files have been blocked for user ${YELLOW}${user}${NOCOLOR}"
  else
    echo -e "\n  No ${WHITE}LICENSE.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}, skipping..."
  fi
  echo -e "\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"
}

BLOCK_ALL_USERS () {
  clear
  HEADER
  for user in ${USERLIST[@]}; do
    echo -e "\n  Checking files for user ${YELLOW}${user}${NOCOLOR}...\n"
    if [[ $(find /home/"$user" -type f -iname "readme.*" | wc -l) > 0 ]]; then
      find /home/"$user" -type f -iname "readme.*" \( -exec chmod 000 {} \; -o -exec true \; \) -exec chown root:root {} \;
      echo -e "\n  All ${WHITE}README.*${NOCOLOR} files have been blocked for user ${YELLOW}${user}${NOCOLOR}"
    else
      echo -e "\n  No ${WHITE}README.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}, skipping..."
    fi
    if [[ $(find /home/"$user" -type f -iname "license.*" | wc -l) > 0 ]]; then
      find /home/"$user" -type f -iname "license.*" \( -exec chmod 000 {} \; -o -exec true \; \) -exec chown root:root {} \;
      echo -e "\n  All ${WHITE}LICENSE.*${NOCOLOR} files have been blocked for user ${YELLOW}${user}${NOCOLOR}"
    else
      echo -e "\n  No ${WHITE}LICENSE.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}, skipping..."
    fi
    SPACER
  done
  echo -e "\n\n  All ${WHITE}README.*${NOCOLOR} and ${WHITE}LICENSE.*${NOCOLOR} files have been blocked\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"
}

UNBLOCK_SINGLE_USER () {
  clear
  HEADER
  echo -e "\n  Checking files for user ${YELLOW}${user}${NOCOLOR}...\n"
  if [[ $(find /home/"$user" -type f -iname "readme.*" | wc -l) > 0 ]]; then
    find /home/"$user" -type f -iname "readme.*" \( -exec chmod 644 {} \; -o -exec true \; \) -exec chown "$user":"$user" {} \;
    echo -e "\n  All ${WHITE}README.*${NOCOLOR} files have been unblocked for user ${YELLOW}${user}${NOCOLOR}"
  else
    echo -e "\n  No ${WHITE}README.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}, skipping..."
  fi
  if [[ $(find /home/"$user" -type f -iname "license.*" | wc -l) > 0 ]]; then
    find /home/"$user" -type f -iname "license.*" \( -exec chmod 644 {} \; -o -exec true \; \) -exec chown "$user":"$user" {} \;
    echo -e "\n  All ${WHITE}LICENSE.*${NOCOLOR} files have been unblocked for user ${YELLOW}${user}${NOCOLOR}"
  else
    echo -e "\n  No ${WHITE}LICENSE.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}, skipping..."
  fi
  echo -e "\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"
}

UNBLOCK_ALL_USERS () {
  clear
  HEADER
  for user in ${USERLIST[@]}; do
    echo -e "\n  Checking files for user ${YELLOW}${user}${NOCOLOR}...\n"
    if [[ $(find /home/"$user" -type f -iname "readme.*" | wc -l) > 0 ]]; then
      find /home/"$user" -type f -iname "readme.*" \( -exec chmod 644 {} \; -o -exec true \; \) -exec chown "$user":"$user" {} \;
      echo -e "\n  All ${WHITE}README.*${NOCOLOR} files have been unblocked for user ${YELLOW}${user}${NOCOLOR}"
    else
      echo -e "\n  No ${WHITE}README.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}, skipping..."
    fi
    if [[ $(find /home/"$user" -type f -iname "license.*" | wc -l) > 0 ]]; then
      find /home/"$user" -type f -iname "license.*" \( -exec chmod 644 {} \; -o -exec true \; \) -exec chown "$user":"$user" {} \;
      echo -e "\n  All ${WHITE}LICENSE.*${NOCOLOR} files have been unblocked for user ${YELLOW}${user}${NOCOLOR}"
    else
      echo -e "\n  No ${WHITE}LICENSE.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}, skipping..."
    fi
    SPACER
  done
  echo -e "\n\n  All ${WHITE}README.*${NOCOLOR} and ${WHITE}LICENSE.*${NOCOLOR} files have been unblocked\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"
}

ROUTE () {
  clear
  HEADER
  echo -e "\n\n  ${WHITE}What would you like to modify?${NOCOLOR}\n\n"
  echo -e "  ${WHITE}1)${NOCOLOR} The Entire Server\n"
  echo -e "  ${WHITE}2)${NOCOLOR} A Single User\n\n"
  echo -en "  ${WHITE}[${NOCOLOR} Enter Selection ${WHITE}]:${NOCOLOR} "
  read -r SelectionA
  case "$SelectionA" in
    1)  clear
        HEADER
        echo -e "\n\n  ${WHITE}Choose an operation:${NOCOLOR}\n\n"
        echo -e "  ${WHITE}1)${NOCOLOR} Blocking\n"
        echo -e "  ${WHITE}2)${NOCOLOR} Unblocking\n\n"
        echo -en "  ${WHITE}[${NOCOLOR} Enter Selection ${WHITE}]:${NOCOLOR} "
        read -r SelectionB
        case "$SelectionB" in
          1)  BLOCK_ALL_USERS
              ;;
          2) UNBLOCK_ALL_USERS
              ;;
        esac
        ;;
    2)  clear
        HEADER
        echo -e "\n\n  ${WHITE}Which user would you like to modify?${NOCOLOR}\n\n"
        readarray newlist < userlist
        SEPARATOR
        for ((i = 0; i < ${#newlist[@]}; ++i)); do
            position=$(( $i + 1 ))
            echo "$position   ${newlist[$i]}"
        done
        SEPARATOR
        echo -en "\n  Select Domain [${WHITE}q for quit${NOCOLOR}]: "
        read -r userchoice
        selector=$(( $userchoice - 1 ))
        user="$(echo ${newlist[$selector]} | tr -d '\n')"
        if [ "$userchoice" = "Q" ] || [ "$userchoice" = "q" ]; then
          echo -e "\n  ${YELLOW}Quiting...${NOCOLOR}\n\n"
          sleep 1
          exit 1
        else
          if ! [[ $userchoice =~ $RE ]]; then
            echo -e "\n  ${RED}Invalid selection\n  Restarting...${NOCOLOR}\n\n"
            sleep 2
            ROUTE
          else
            clear
            HEADER
            echo -e "\n\n  ${WHITE}Choose an operation to perform on ${NOCOLOR}/home/${YELLOW}${user}${NOCOLOR}:\n\n"
            echo -e "  ${WHITE}1)${NOCOLOR} Block\n"
            echo -e "  ${WHITE}2)${NOCOLOR} Unblock\n\n"
            echo -en "  ${WHITE}[${NOCOLOR} Enter Selection ${WHITE}]:${NOCOLOR} "
            read -r SelectionC
            case "$SelectionC" in
              1)  BLOCK_SINGLE_USER
                  ;;
              2)  UNBLOCK_SINGLE_USER
                  ;;
            esac
          fi
        fi
      ;;
  esac
}

HELPTEXT () {
  clear
  HEADER
  echo -e "\n  ${WHITE}No-ReadMe ${GREEN}HELP${NOCOLOR}:"
  echo -e "  ${GREEN}---------------${NOCOLOR}\n"
  echo -e "  Nulls/resets permissions on all ${WHITE}readme.${GREEN}* ${NOCOLOR}and ${WHITE}license.${GREEN}* ${NOCOLOR}files\n"
  echo -e "  ${GREEN}---------------${NOCOLOR}\n"
  echo -e "  ${WHITE}USAGE: ${NOCOLOR}no-readme ${WHITE}[${NOCOLOR}options${WHITE}]${NOCOLOR}\n"
  echo -e "  ${WHITE}Options:${NOCOLOR}\n"
  echo -e "  ${GREEN}-b${NOCOLOR}: Block all ${WHITE}readme.${GREEN}* ${NOCOLOR}and ${WHITE}license.${GREEN}*${NOCOLOR} user files on server ${WHITE}(${YELLOW}NO TERMINAL OUTPUT${WHITE})${NOCOLOR}"
  echo -e "  ${GREEN}-u${NOCOLOR}: Restore all ${WHITE}readme.${GREEN}* ${NOCOLOR}and ${WHITE}license.${GREEN}*${NOCOLOR} user files on server ${WHITE}(${YELLOW}NO TERMINAL OUTPUT${WHITE})${NOCOLOR}"
  echo -e "  ${GREEN}-h${NOCOLOR}: Display this helptext and exit"
  echo -e "  ${GREEN}-m${NOCOLOR}: Menu driven operation\n\n"
  exit 0
}

############################
##------------------------##
## END - SCRIPT FUNCTIONS ##
##------------------------##
############################

#########################
##---------------------##
## BEGIN - CORE SCRIPT ##
##---------------------##
#########################

CHECK_FOR_ROOT

grep \: /etc/trueuserdomains | grep -v nobody | awk '{print $2}' | uniq > userlist

case $1 in
  -b) BLOCK_ALL_USERS > /dev/null 2>&1
      ;;
  -u) UNBLOCK_ALL_USERS > /dev/null 2>&1
      ;;
  -h) HELPTEXT
      ;;
  --h) HELPTEXT
      ;;
  -help) HELPTEXT
      ;;
  --help) HELPTEXT
      ;;
  -m) ROUTE
      ;;
  *) HELPTEXT
      ;;
esac

rm userlist

#######################
##-------------------##
## END - CORE SCRIPT ##
##-------------------##
#######################

exit 0
