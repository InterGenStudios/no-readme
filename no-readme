#!/bin/bash
# ----------------------------------------------------------------------------------------------------
# no-readme | simple script to null/enable readme.* and license.* files on a cPanel server
# no-readme Version: 1.1
# Github: https://github.com/InterGenStudios/no-readme
# ---------------------------------------------------
# InterGenStudios: 10-17-15
# Copyright (c) 2015: Christopher 'InterGen' Cork  InterGenStudios
# URL: https://intergenstudios.com
# --------------------------------
# License: GPL-2.0+
# URL: http://opensource.org/licenses/gpl-license.php
# ---------------------------------------------------
# no-readme is free software:
# You may redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software
# Foundation, either version 2 of the License, or (at your discretion)
# any later version.
# ------------------

###########################################
##---------------------------------------##
## BEGIN - INITIAL VARIABLE DECLARATIONS ##
##---------------------------------------##
###########################################

# Simple regex for number checking
RE='^[0-9]+$'

# Colors trailing text Red
RED="\e[1m\e[31m"

# Colors trailing text Green
GREEN="\e[1m\e[32m"

# Colors trailing text Yellow
YELLOW="\e[1m\e[33m"

# Colors trailing text Blue
BLUE="\e[1m\e[34m"

# Colors trailing text Bold White
WHITE="\e[1m\e[37m"

# Removes any previously set colors
NOCOLOR="\e[0m"

# Sets no-readme version number
vers=1.1

USERLIST="$(grep \: /etc/trueuserdomains | grep -v nobody | awk '{print $2}' | uniq)"
export USERLIST

#########################################
##-------------------------------------##
## END - INITIAL VARIABLE DECLARATIONS ##
##-------------------------------------##
#########################################

##############################
##--------------------------##
## BEGIN - SCRIPT FUNCTIONS ##
##--------------------------##
##############################

#----------------------------------#
# BEGIN - DISPLAY LAYOUT FUNCTIONS #
#----------------------------------#

# A small simple divider
SPACER () {

    echo -e "\n${BLUE}----------------------------------\n${NOCOLOR}"

}

# A large simple divider
SEPARATOR () {

    echo -e "\n\n${BLUE}------------------------------------------------------------------------------${NOCOLOR}\n\n"

}

# Creates uniform look during script execution when called after any clear command
HEADER () {

    echo -e "\n\n${BLUE}______________________________________________________________________________________________${NOCOLOR}\n"
    echo -e "${WHITE}    no-readme v${GREEN}${vers}${NOCOLOR}"
    echo -e "${BLUE}______________________________________________________________________________________________${NOCOLOR}\n\n"

}

#--------------------------------#
# END - DISPLAY LAYOUT FUNCTIONS #
#--------------------------------#

CHECK_FOR_ROOT () {

    if [ "$(id -u)" != "0" ]; then

    echo -e "\n\n    ${RED}${BLINK}--------${NOCOLOR}"
    echo -e "    ${RED}${BLINK}WARNING!${NOCOLOR}"
    echo -e "    ${RED}${BLINK}--------${NOCOLOR}\n\n"
    echo -e "    ${WHITE}no-readme must be run as ${RED}${UNDERLINE_TEXT}root${NOCOLOR}\n\n"
    echo -e "    (Exiting now...)\n\n"
    exit 1

    fi

}

BLOCK_SINGLE_USER () {

    clear
    HEADER
    find /home/"$user" -type f -iname "readme.*" -o -iname "license.*" >> filelist
    if [ "$(wc -l < filelist)" == "0" ]; then

        echo -e "\n\n  No ${WHITE}README.*${NOCOLOR} or ${WHITE}LICENSE.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"

    else

        echo -e "\n\n  Checking files for user ${YELLOW}${user}${NOCOLOR}...\n\n"
        grep -v '^ *#' < filelist | while IFS= read -r file; do

            chown root:root "$file" && chmod 000 "$file"

        done
        echo -e "  All ${WHITE}README.*${NOCOLOR} and ${WHITE}LICENSE.*${NOCOLOR} files have been blocked for user ${YELLOW}${user}${NOCOLOR}\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"
        rm filelist

    fi

}

BLOCK_ALL_USERS () {

    clear
    HEADER
    for user in ${USERLIST[@]}; do

        find /home/"$user" -type f -iname "readme.*" -o -iname "license.*" >> "$user"_filelist
        if [ "$(wc -l < ${user}_filelist)" == "0" ]; then

            echo -e "\n  No ${WHITE}README.*${NOCOLOR} or ${WHITE}LICENSE.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR} - ${WHITE}skipping...${NOCOLOR}\n"
            SPACER

        else

            echo -e "\n  Checking files for user ${YELLOW}${user}${NOCOLOR}...\n"
            grep -v '^ *#' < "$user"_filelist | while IFS= read -r file; do

                chown root:root "$file" && chmod 000 "$file"

            done
            echo -e "  All ${WHITE}README.*${NOCOLOR} and ${WHITE}LICENSE.*${NOCOLOR} files have been blocked for user ${YELLOW}${user}${NOCOLOR}\n"
            rm "$user"_filelist
            SPACER

        fi

    done
    echo -e "\n\n  All ${WHITE}README.*${NOCOLOR} and ${WHITE}LICENSE.*${NOCOLOR} files have been blocked\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"

}

UNBLOCK_SINGLE_USER () {

    clear
    HEADER
    find /home/"$user" -type f -iname "readme.*" -o -iname "license.*" >> filelist
    if [ "$(wc -l < filelist)" == "0" ]; then

        echo -e "\n\n  No ${WHITE}README.*${NOCOLOR} or ${WHITE}LICENSE.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR}\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"

    else

        echo -e "\n\n  Checking files for user ${YELLOW}${user}${NOCOLOR}...\n\n"
        grep -v '^ *#' < filelist | while IFS= read -r file; do

            chown "$user":"$user" "$file" && chmod 644 "$file"

        done
        echo -e "  All ${WHITE}README.*${NOCOLOR} and ${WHITE}LICENSE.*${NOCOLOR} files have been unblocked for user ${YELLOW}${user}${NOCOLOR}\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"
        rm filelist

    fi

}

UNBLOCK_ALL_USERS () {

    clear
    HEADER
    for user in ${USERLIST[@]}; do

        find /home/"$user" -type f -iname "readme.*" -o -iname "license.*" >> "$user"_filelist
        if [ "$(wc -l < ${user}_filelist)" == "0" ]; then

            echo -e "\n  No ${WHITE}README.*${NOCOLOR} or ${WHITE}LICENSE.*${NOCOLOR} files found for user ${YELLOW}${user}${NOCOLOR} - ${WHITE}skipping...${NOCOLOR}\n"
            SPACER

        else

            echo -e "\n  Checking files for user ${YELLOW}${user}${NOCOLOR}...\n"
            grep -v '^ *#' < "$user"_filelist | while IFS= read -r file; do

                chown "$user":"$user" "$file" && chmod 644 "$file"

            done
            echo -e "  All ${WHITE}README.*${NOCOLOR} and ${WHITE}LICENSE.*${NOCOLOR} files have been unblocked for user ${YELLOW}${user}${NOCOLOR}\n"
            rm "$user"_filelist
            SPACER

        fi

    done
    echo -e "\n\n  All ${WHITE}README.*${NOCOLOR} and ${WHITE}LICENSE.*${NOCOLOR} files have been unblocked\n\n  ${GREEN}Run complete${NOCOLOR}\n\n"

}

ROUTE () {
    clear
    HEADER
    echo -e "\n\n  ${WHITE}What would you like to modify?${NOCOLOR}\n\n"
    echo -e "  ${WHITE}1)${NOCOLOR} The Entire Server\n"
    echo -e "  ${WHITE}2)${NOCOLOR} A Single User\n\n"
    echo -en "  ${WHITE}[${NOCOLOR} Enter Selection ${WHITE}]:${NOCOLOR} "
    read -r SelectionA

    case "$SelectionA" in

        1) clear
           HEADER
           echo -e "\n\n  ${WHITE}Choose an operation:${NOCOLOR}\n\n"
           echo -e "  ${WHITE}1)${NOCOLOR} Blocking\n"
           echo -e "  ${WHITE}2)${NOCOLOR} Unblocking\n\n"
           echo -en "  ${WHITE}[${NOCOLOR} Enter Selection ${WHITE}]:${NOCOLOR} "
           read -r SelectionB

           case "$SelectionB" in

               1) BLOCK_ALL_USERS
                  ;;
               2) UNBLOCK_ALL_USERS
                  ;;

           esac
           ;;
        2) clear
           HEADER
           echo -e "\n\n  ${WHITE}Which user would you like to modify?${NOCOLOR}\n\n"
           sed = userlist | sed 'N;s/\n/\t/' > userchoices
           SEPARATOR
           cat userchoices
           SEPARATOR
           echo -en "\n  Select Domain [${WHITE}q for quit${NOCOLOR}]: "
           read -r userchoice
           user="$(grep -m 1 "${userchoice}" userchoices | awk '{print $2}')"

           if [ "$userchoice" = "Q" ] || [ "$userchoice" = "q" ]; then

               echo -e "\n  ${YELLOW}Quiting...${NOCOLOR}\n\n"
               sleep 1
               exit 1

           else

               if ! [[ $userchoice =~ $RE ]]; then

                   echo -e "\n  ${RED}Invalid selection\n  Restarting...${NOCOLOR}\n\n"
                   sleep 2
                   ROUTE

               else

                   clear
                   HEADER
                   echo -e "\n\n  ${WHITE}Choose an operation to perform on ${NOCOLOR}/home/${YELLOW}${user}${NOCOLOR}:\n\n"
                   echo -e "  ${WHITE}1)${NOCOLOR} Block\n"
                   echo -e "  ${WHITE}2)${NOCOLOR} Unblock\n\n"
                   echo -en "  ${WHITE}[${NOCOLOR} Enter Selection ${WHITE}]:${NOCOLOR} "
                   read -r SelectionC

                   case "$SelectionC" in

                       1) BLOCK_SINGLE_USER
                          ;;
                       2) UNBLOCK_SINGLE_USER
                          ;;

                   esac

               fi

           rm userchoices
           fi
           ;;

    esac

}

############################
##------------------------##
## END - SCRIPT FUNCTIONS ##
##------------------------##
############################

#########################
##---------------------##
## BEGIN - CORE SCRIPT ##
##---------------------##
#########################

CHECK_FOR_ROOT
grep \: /etc/trueuserdomains | grep -v nobody | awk '{print $2}' | uniq > userlist
ROUTE
rm userlist

#######################
##-------------------##
## END - CORE SCRIPT ##
##-------------------##
#######################

exit 0
